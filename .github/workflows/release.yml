name: release
on:
  push:
    tags:
      - '*'
jobs:
  deploy:
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Run xcode-select
      run: sudo xcode-select -s /Applications/Xcode_11.4.app

    - name: Setup Carthage cache
      uses: actions/cache@v1
      id: carthage-cache
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}

    - name: Install dependencies
      if: steps.carthage-cache.outputs.cache-hit != 'true'
      run: |
        carthage bootstrap --no-use-binaries --platform macOS --cache-builds

    - name: Install certificate
      uses: apple-actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ secrets.DEVELOPER_ID_APPLICATION_CERTIFICATE }}
        p12-password: ${{ secrets.DEVELOPER_ID_APPLICATION_CERTIFICATE_PASSWORD }}

    - name: Create xcconfig
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      run: |
        ./.github/scripts/generateConfigFromEnv.sh

    - name: Build
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        APPLE_ID_EMAIL: ${{ secrets.APPLE_ID_EMAIL }}
        FASTLANE_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
      run: |
        fastlane release
        zip -r MusicBar.zip MusicBar.app

    - name: Create release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provided
      with:
        tag_name: ${{ github.ref }}
        release_name: MusicBar ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provided
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./MusicBar.zip
        asset_name: MusicBar.zip
        asset_content_type: application/zip
